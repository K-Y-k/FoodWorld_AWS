# 로컬 모드
spring.profiles.active=local

# 콘솔에 쿼리 로그를 남기고 싶을 때의 설정
spring.jpa.show_sql=true

# 콘솔에 나온 쿼리 로그를 MySql의 방언으로 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# 웹 콘솔에서 H2 환경에 접속하기 위한 설정 
spring.h2.console.enabled=true

# H2 데이터베이스 연결
spring.datasource.username=sa
spring.datasource.url=jdbc:h2:tcp://localhost/~/testFoodWorld
spring.datasource.driver-class-name=org.h2.Driver

# spring.jpa.hibernate.ddl-auto 옵션의 값으로 지정할 수 있다.
#  none       : 아무것도 실행하지 않는다(대부분의 DB에서 기본값)
#  create-drop: SessionFactory가 시작될 때 drop및 생성을 실행하고, SessionFactory가 종료될 때 drop을 실행한다 (in-memory DB의 경우 기본값이다)
#  create     : SessionFactory가 시작될 때 데이터베이스 drop을 실행하고 생성된 DDL을 실행한다
#  update     : 변경된 스키마를 적용한다
#  validate   : 변경된 스키마가 있다면 변경점을 출력하고 애플리케이션을 종료한다
#spring.jpa.hibernate.ddl-auto=create


# 로그 설정
logging.level.org.hibernate=info

# SQL을 로그로 보여줌
logging.level.org.hibernate.SQL=debug

# 보이는 쿼리를 가독성 좋게 해준다.
spring.jpa.properties.hibernate.format_sql=true

# sql문 앞에 jpql도 확인 가능해짐
spring.jpa.properties.hibernate.use_sql_comments=true

# 세션 타임아웃 지정해서 설정
server.servlet.session.timeout=1800

# URL 전달 방식을 끄고 항상 쿠키를 통해서만 세션을 유지, URL에 jsessionid가 노출되지 않는다.
server.servlet.session.tracking-modes=cookie


# 프로필 이미지 실제 업로드 경로 설정
file.profileLocation=C:/Users/KOR/IdeaProjects/profileFile/
# 프로필 이미지 업로드한 리소스 경로 설정
profileFile.dir=file:///C:/Users/KOR/IdeaProjects/profileFile/


# 배포 자동화 구성을 위한 추가
# file path / 프로젝트명.pid
spring.pid.file=/home/ec2-user/app/step2/FoodWorld_AWS.pid